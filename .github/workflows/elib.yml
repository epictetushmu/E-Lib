name: E-Lib CI

on: [push, pull_request]

jobs:
  e-lib-test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP with MongoDB 2.0 extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: mbstring, mysqli, pdo_mysql
          coverage: none

      - name: Install MongoDB extension v2.0
        run: |
          # Install MongoDB extension 2.0
          sudo pecl install mongodb-2.0.0
          echo "extension=mongodb.so" | sudo tee -a /etc/php/8.1/cli/conf.d/20-mongodb.ini
          php -m | grep mongodb || echo "MongoDB extension not found"

      # Install MongoDB tools directly from the MongoDB 6.0 repository
      - name: Install MongoDB tools
        run: |
          # Install MongoDB Database Tools manually using the .deb package
          wget https://fastdl.mongodb.org/tools/db/mongodb-database-tools-ubuntu2204-x86_64-100.7.3.deb
          sudo apt install ./mongodb-database-tools-ubuntu2204-x86_64-100.7.3.deb
          
          # Verify the tools were installed
          mongoimport --version || echo "MongoDB tools installation check"
          
          # Verify MongoDB connection using mongo shell from the service container
          mongo --host localhost --port 27017 --eval "db.runCommand({ ping: 1 })" || echo "MongoDB connection check skipped"

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-progress
          
          # Fallback in case of extension issues
          if [ $? -ne 0 ]; then
            echo "Regular installation failed, trying with platform requirement ignore..."
            composer install --prefer-dist --no-progress --ignore-platform-req=ext-mongodb
          fi

      - name: Create .env file
        run: |
          cat > .env << 'EOL'
          DB_HOST=localhost
          DB_PORT=27017
          DB_DATABASE=LibraryDb
          SECRET_KEY=your-secret-key-for-testing
          CAS_SERVER_URL=https://auth.example.com/cas
          EOL

      - name: Start PHP server
        run: php -S 0.0.0.0:8000 -t public &
      
      - name: Set up ngrok
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok

      - name: Expose app via ngrok
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          ngrok http 8000 &
          sleep 5
          echo "App available at: $(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[0].public_url')"